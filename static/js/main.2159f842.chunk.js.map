{"version":3,"sources":["Components/Bill/Bill.js","Components/Tip/Tip.js","Components/People/People.js","Components/Total/Total.js","Components/Total/Total1.js","Components/Total/Total2.js","Components/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Bill","props","className","children","TextField","id","label","variant","maxLength","value","bill","type","onChange","handleChange","Tip","tip","People","people","Total","disabled","news","defaultValue","Total1","color","Total2","Layout","state","totaltip","total","newtotal","ev","event","setState","target","handleTip","handlePeople","handleTotal","evaluate","parseFloat","evaluate1","evaluate2","toFixed","clear","xmlns","viewBox","fill","d","this","Button","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2159f842.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './Bill.css';\nconst Bill = (props) => {\n\n  return (\n    <div className='bill'>\n    {props.children}\n      <form>\n      <TextField\n      id=\"outlined-basic1\"\n      label=\"$Bill\"\n      variant=\"outlined\"\n      maxLength='2'\n      value={props.bill}\n      type='number'\n      onChange={props.handleChange}\n      className='bills'\n       />\n      </form>\n    </div>\n  )\n}\n\n\nexport default Bill;\n//<Bill bill={this.state.bill} handleChange={this.handleChange}> Enter bill total</Bill>\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './Tip.css';\n\n\nconst Tip = (props) => {\n  return (\n    <div>\n    {props.children}\n      <form>\n      <TextField\n      id=\"outlined-basic2\"\n      label=\"Tip%\"\n      variant=\"outlined\"\n      maxLength='2'\n      value={props.tip}\n      type='number'\n      onChange={props.handleChange}\n      className='bills'\n       />\n      </form>\n    </div>\n  )\n}\n\nexport default Tip;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport './People.css';\n\nconst People = (props) => {\n  return (\n    <div>\n    {props.children}\n      <form>\n      <TextField\n      id=\"outlined-basic3\"\n      label=\"Number of Friends\"\n      variant=\"outlined\"\n      maxLength='2'\n      value={props.people}\n      type='number'\n      onChange={props.handleChange}\n      className='bills'\n       />\n      </form>\n    </div>\n  )\n}\n\nexport default People;\n//<ColoredLine color=\"grey\" />\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst Total = (props) => {\n  return (\n    <div>\n    {props.children}\n    <p> $Total per person</p>\n      <TextField\n      disabled id=\"standard-disabled1\"\n      label={props.news}\n      defaultValue={props.news}\n       />\n    </div>\n  )\n}\n\n\nexport default Total;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst Total1 = (props) => {\n  return (\n    <div>\n    {props.children}\n    <p> $Total </p>\n      <TextField\n      disabled id=\"standard-disabled2\"\n      color=\"secondary\"\n      label={props.news}\n      defaultValue={props.news}\n\n       />\n    </div>\n  )\n}\n\n\nexport default Total1;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst Total2 = (props) => {\n  return (\n    <div>\n    {props.children}\n    <p> $Tip </p>\n      <TextField\n      disabled id=\"standard-disabled3\"\n      label={props.news}\n      defaultValue={props.news}\n       />\n    </div>\n  )\n}\n\n\nexport default Total2;\n","import React, {Component} from 'react';\nimport Bill from '../Bill/Bill';\nimport Tip from '../Tip/Tip';\nimport People from '../People/People';\nimport { Button } from '@material-ui/core';\n//import Title from '../Title/Title';\nimport Total from '../Total/Total';\nimport Total1 from '../Total/Total1';\nimport Total2 from '../Total/Total2';\nimport './Layout.css';\n\nclass Layout extends Component {\n\n  state = {\n\n     bill: '',\n     tip: '',\n     people: '',\n     totaltip: '',\n     total: '',\n     newtotal: '',\n     ev: ''\n\n  }\n\n  handleChange = (event) => {\n    this.setState({bill: event.target.value})\n  }\n  handleTip = (event) => {\n    this.setState({tip: event.target.value})\n  }\n  handlePeople = (event) => {\n    this.setState({people: event.target.value})\n  }\n  handleTotal = (event) => {\n    this.setState({total: event.target.value})\n  }\n\n  evaluate= () => {\n    this.setState(\n      {totaltip:\n        parseFloat(this.state.bill) *\n        parseFloat(this.state.tip/100)})\n  };\n\n  evaluate1 = () => {\n    this.setState(\n      {total:\n      parseFloat(this.state.totaltip) +\n      parseFloat(this.state.bill)})\n  }\n\n  evaluate2 = () => {\n    this.setState(\n      {newtotal:\n      parseFloat(this.state.total) /\n      parseFloat(this.state.people)})\n  }\n\n  handleTotal = () => {\n    const totaltip = (this.state.bill * (this.state.tip/100)).toFixed(2);\n    const total =  (parseFloat(this.state.bill) + parseFloat(totaltip)).toFixed(2);\n    const newtotal = (total / this.state.people).toFixed(2);\n\n      this.setState({\n          total: total,\n          totaltip: totaltip,\n          newtotal: newtotal\n      })\n  }\n\n  clear = () => {\n\n    this.setState({\n      bill: '',\n      tip: '',\n      people: '',\n      newtotal: '',\n      totaltip: '',\n      total: ''\n\n    })\n  }\n\n  render() {\n    return (\n      <div className='Layout'>\n        <div className='wave-container'>\n        <h1> Friends Split</h1>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 319\"><path fill=\"#fff\"  d=\"M0,64L30,90.7C60,117,120,171,180,170.7C240,171,300,117,360,101.3C420,85,480,107,540,128C600,149,660,171,720,170.7C780,171,840,149,900,138.7C960,128,1020,128,1080,133.3C1140,139,1200,149,1260,176C1320,203,1380,245,1410,266.7L1440,288L1440,320L1410,320C1380,320,1320,320,1260,320C1200,320,1140,320,1080,320C1020,320,960,320,900,320C840,320,780,320,720,320C660,320,600,320,540,320C480,320,420,320,360,320C300,320,240,320,180,320C120,320,60,320,30,320L0,320Z\"></path>\n        </svg>\n        </div>\n        <div className='root'>\n        <div className='hi'>\n          <Bill bill={this.state.bill} handleChange={this.handleChange} />\n        </div>\n        <div className='hii'>\n          <Tip tip={this.state.tip} handleChange={this.handleTip}/>\n        </div>\n        <div className='hiii'>\n          <People people={this.state.people} handleChange={this.handlePeople}/>\n        </div>\n        </div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleTotal}>Calculate</Button>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.clear}>Clear</Button>\n          <div className='total'>\n          <Total news={this.state.newtotal}/>\n          <Total1 news={this.state.total}/>\n          <Total2 news={this.state.totaltip}/>\n          </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Layout;\n","import React, {Component} from 'react';\nimport Layout from './Components/Layout/Layout';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n  return (\n    <div className=\"App\">\n      <Layout/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}